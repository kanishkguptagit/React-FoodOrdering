[{"/home/flux/reactprojects/FoodOrdering/src/index.js":"1","/home/flux/reactprojects/FoodOrdering/src/App.js":"2","/home/flux/reactprojects/FoodOrdering/src/components/Navigation/Navigation.js":"3","/home/flux/reactprojects/FoodOrdering/src/components/UI/Card/Card.js":"4","/home/flux/reactprojects/FoodOrdering/src/components/home/Home.js":"5","/home/flux/reactprojects/FoodOrdering/src/components/Item/Menu.js":"6","/home/flux/reactprojects/FoodOrdering/src/components/Item/MenuList.js":"7","/home/flux/reactprojects/FoodOrdering/src/components/UI/Modal/Modal.js":"8","/home/flux/reactprojects/FoodOrdering/src/components/UI/Button/Button.js":"9","/home/flux/reactprojects/FoodOrdering/src/components/UI/Modal/ModalList.js":"10","/home/flux/reactprojects/FoodOrdering/src/components/UI/ButtonSmall/ButtonSmall.js":"11","/home/flux/reactprojects/FoodOrdering/src/store/CartProvider.js":"12","/home/flux/reactprojects/FoodOrdering/src/store/cart-context.js":"13"},{"size":142,"mtime":1616594953000,"results":"14","hashOfConfig":"15"},{"size":666,"mtime":1622651996830,"results":"16","hashOfConfig":"15"},{"size":1003,"mtime":1622652513693,"results":"17","hashOfConfig":"15"},{"size":210,"mtime":1622558225027,"results":"18","hashOfConfig":"15"},{"size":712,"mtime":1622651965198,"results":"19","hashOfConfig":"15"},{"size":458,"mtime":1622633848824,"results":"20","hashOfConfig":"15"},{"size":860,"mtime":1622634436628,"results":"21","hashOfConfig":"15"},{"size":1188,"mtime":1622652152279,"results":"22","hashOfConfig":"15"},{"size":273,"mtime":1622633381972,"results":"23","hashOfConfig":"15"},{"size":713,"mtime":1622621146972,"results":"24","hashOfConfig":"15"},{"size":281,"mtime":1622619803338,"results":"25","hashOfConfig":"15"},{"size":1171,"mtime":1622657591474,"results":"26","hashOfConfig":"15"},{"size":348,"mtime":1622651280776,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"11fn1th",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/flux/reactprojects/FoodOrdering/src/index.js",[],["56","57"],"/home/flux/reactprojects/FoodOrdering/src/App.js",[],"/home/flux/reactprojects/FoodOrdering/src/components/Navigation/Navigation.js",[],"/home/flux/reactprojects/FoodOrdering/src/components/UI/Card/Card.js",[],"/home/flux/reactprojects/FoodOrdering/src/components/home/Home.js",[],"/home/flux/reactprojects/FoodOrdering/src/components/Item/Menu.js",[],"/home/flux/reactprojects/FoodOrdering/src/components/Item/MenuList.js",[],"/home/flux/reactprojects/FoodOrdering/src/components/UI/Modal/Modal.js",[],"/home/flux/reactprojects/FoodOrdering/src/components/UI/Button/Button.js",[],"/home/flux/reactprojects/FoodOrdering/src/components/UI/Modal/ModalList.js",[],"/home/flux/reactprojects/FoodOrdering/src/components/UI/ButtonSmall/ButtonSmall.js",[],"/home/flux/reactprojects/FoodOrdering/src/store/CartProvider.js",["58","59"],"import { useReducer } from \"react\";\n\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n    items: [],\n    totalItems: 0,\n    totalAmount: 0,\n}\n\nconst cartReducer = (state, action) => {\n    if(action.type === 'ADD'){\n        const updatedItems = state.items.concat(action.item);\n        const updatedAmount = state.totalAmount + action.item.price * action.item.totalAmount; //needs checking\n    }\n    return defaultCartState;\n}\n\nconst CartProvider = (props) =>{\n\n    const [cartState, dispatchCartAction] = useReducer(cartReducer,defaultCartState);\n\n    const addItemHandlerCart = item => {\n        dispatchCartAction({type: 'ADD', item:item});\n    };\n\n    const removeItemHandlerCart = id => {\n        dispatchCartAction({type: 'REMOVE', id:id })\n    };\n    \n    const cartContext = {\n        items: cartState.item,\n        totalItems: cartState.totalItems,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemHandlerCart,\n        removeItem: removeItemHandlerCart,\n    }\n\n    return(\n        <CartContext.Provider value={cartContext} >\n            {props.children}\n        </CartContext.Provider>\n    )\n}\n\nexport default CartProvider;","/home/flux/reactprojects/FoodOrdering/src/store/cart-context.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":13,"column":15,"nodeType":"66","messageId":"67","endLine":13,"endColumn":27},{"ruleId":"64","severity":1,"message":"68","line":14,"column":15,"nodeType":"66","messageId":"67","endLine":14,"endColumn":28},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'updatedItems' is assigned a value but never used.","Identifier","unusedVar","'updatedAmount' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]